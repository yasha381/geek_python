# Задание-1:
# Матрицы в питоне реализуются в виде вложенных списков:
# Пример. Дано:
print("Задание-1 (hard)")
matrix = [[1, 0, 8],
          [3, 4, 1],
          [0, 4, 2]]
matrix_rotate = [[i for i in line if i == line[0]] for line in matrix] + [[i for i in line if i == line[1]] for line in matrix] + [[i for i in line if i == line[2]] for line in matrix]
print(matrix_rotate)
print("\n")
          
# Выполнить поворот (транспонирование) матрицы
# Пример. Результат:
# matrix_rotate = [[1, 3, 0],
#                  [0, 4, 4],
#                  [8, 1, 2]]

# Суть сложности hard: Решите задачу в одну строку

# Задание-2:
# Найдите наибольшее произведение пяти последовательных цифр в 1000-значном числе.
# Выведите произведение и индекс смещения первого числа последовательных 5-ти цифр.
# Пример 1000-значного числа:
print("Задание-2 (hard)")
number = """
73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450"""

five = ""
a = 0
list = []
for i in number:
    if i != '\n':
        if len(five) == 5:
            for t in five:
                a = a + int(t)
            list.append(a)
            a = 0
            five = five[1:]
            five += i
        else:
            five += i
b = 0
for i in list:
    if i > b:
        b = i
print(b)
print("\n")


# Задание-3 (Ферзи):
# Известно, что на доске 8×8 можно расставить 8 ферзей так, чтобы они не били
# друг друга. Вам дана расстановка 8 ферзей на доске.
# Определите, есть ли среди них пара бьющих друг друга.
# Программа получает на вход восемь пар чисел,
# каждое число от 1 до 8 — координаты 8 ферзей.
# Если ферзи не бьют друг друга, выведите слово NO, иначе выведите YES.
print("Задание-3 (hard)")
figures = [[1, 7], [2, 4], [3, 2], [4, 8], [5, 6], [6, 1], [7, 3], [8, 5]]
a = "NO"
for el in figures:
        for t in figures:
            if el != t:
                z = el[:]
                while z[0] < 8: # x
                    z[0] = z[0] + 1
                    if z == t:
                        a = "YES"
                        break
                z = el[:]
                
                while z[0] > 1: # -x
                    z[0] = z[0] - 1
                    if z == t:
                        a = "YES"
                        break
                z = el[:]
                
                while z[1] < 8: # y
                    z[1] = z[1] + 1
                    if z == t:
                        a = "YES"
                        break
                z = el[:]
                
                while z[1] > 1: # -y
                    z[1] = z[1] - 1
                    if z == t:
                        a = "YES"
                        break
                z = el[:]
                
                while z[0] < 8: # xy
                    z[0] = z[0] + 1
                    z[1] = z[1] + 1
                    if z == t:
                        a = "YES"
                        break
                z = el[:]

                while z[0] < 8: # x-y
                    z[0] = z[0] + 1
                    z[1] = z[1] - 1
                    if z == t:
                        a = "YES"
                        break
                z = el[:]
                
                while z[0] > 1: # -xy
                    z[0] = z[0] - 1
                    z[1] = z[1] + 1
                    if z == t:
                        a = "YES"
                        break
                z = el[:]
                
                while z[1] > 1: # -x-y
                    z[0] = z[0] - 1
                    z[1] = z[1] - 1
                    if z == t:
                        a = "YES"
                        break
print(a)
