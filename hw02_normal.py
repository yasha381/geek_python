__author__ = 'Кацура Яков'

# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]

import math
a = [2, -5, 8, 9, -25, 25, 4]
b = []
print(a)
for i in a:
    if i>=0:
        c = int(math.sqrt(i))
        if i/int(c) == c :
            b.append(int(math.sqrt(i)))
print(b)


# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)

import datetime
import locale
days = ["первое", "второе", "третье", "четвертое", "пятое", "шестое", "седьмое", "восьмое", "девятое", "десятое",
        "одиннадцатое", "двенадцатое", "тринадцатое", "четырнадцатое", "пятнадцатое", "шестнадцатое", "семнадцатое",
        "восемнадцатое", "девятнадцатое", "двадцатое", "двадцать первое", "двадцать второе", "двадцать третье",
        "двадцать четвертое", "двадцать пятое", "двадцать шестое", "двадцать седьмое", "двадцать восьмое",
        "двадцать девятое", "тридцатое", "тридцать первое"]
def str_to_date(str):
    digits = [int(x) for x in str.split('.')]
    return datetime.date(digits[2], digits[1], digits[0])
def date_to_words(d):
    return d.strftime("{} %B %Y года".format(days[d.day])).lower()

locale.setlocale(locale.LC_ALL, '')
date_str = '02.11.2013'
date = str_to_date(date_str)
print(date_to_words(date))


# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random

import random
a = []
a.append(random.randint(-100, 100))
print(a)

# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут: 
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]

list1 = [1, 2, 4, 5, 6, 2, 5, 2]
new_list1 = list(set(list1))
print("{} -> {}".format(list1, new_list1))
list2 = [1, 2, 4, 5, 6, 2, 5, 2]
new_list2 = [x for x in list2 if list2.count(x) == 1]
print("{} -> {}".format(list2, new_list2))
